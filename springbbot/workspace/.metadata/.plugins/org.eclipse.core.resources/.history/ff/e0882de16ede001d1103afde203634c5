package com.ispan.springbootdemo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.ispan.springbootdemo.controller.model.Messages;
import com.ispan.springbootdemo.service.MessageService;

@Controller
public class MessageController {

	@Autowired
	private MessageService mService;
	
	@GetMapping("/message/add")
	public String addMessage(Model model) {
		
		model.addAttribute("messages", new Messages());//new Messages是空的物件
		
		Messages latest = mService.getLatest();
		model.addAttribute("latest", latest);
		
		return "message/addMessagePage";
	}
	
	@PostMapping("/messages/post")
	public String postMessage(@ModelAttribute("messages") Messages msg,Model model) {
		//@ModelAttribute("messages") Messages msg 這裡就是要接收jsp裡所傳來的資料，也就是setText裡面的東西
		mService.addMessage(msg);//透過這個方法，setText的資料進資料庫了，資料送，畫面不可能還會存在剛剛寫完的畫面吧?
		
		model.addAttribute("messages", new Messages());//所以資料送到資料庫之後，要用新的畫面取代原本有寫東西的畫面，這樣空白的畫面就可以取代原本有值的畫面
		
		Messages latest = mService.getLatest();//同時送出資料後，新的畫面會顯示出剛剛所新增的資料
		model.addAttribute("latest", latest);
		
		return "message/addMessagePage";
	}
	
	@GetMapping("/messages")
	public String goShowMessages(@RequestParam(name="p",defaultValue = "1") Integer pageNumber,Model model) {
		Page<Messages> page = mService.findByPage(pageNumber);
		
		model.addAttribute("page", page);
		
		return "message/showMessages";
	}
	
}
